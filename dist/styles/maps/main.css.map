{"version":3,"sources":["vendor/import/_normalize.scss","base/_fonts.scss","base/_general.scss","base/_styleguide.scss","helpers/_include-media.scss","../blocks/modules/header/header.scss","../blocks/modules/hero-section/hero-section.scss","../blocks/modules/advantages/advantages.scss"],"names":[],"mappings":"AAAA;EACI;;AAEA;EACI;;AAGJ;EAEI;;;AAIR;EACI;EACA;EACA;;;AAGJ;EACI;EACA;EACA;;;AAGJ;EACI;;;AAEJ;EACI;;;AAGJ;AAAA;EAEI;EACA;;;AAGJ;EACI;;;AAGJ;AAAA;AAAA;EAGI;;;AAGJ;EACI;;;AAGJ;EACI;EACA;EACA;;;AAGJ;EACI;EACA;;;AAGJ;EACI;;;AAGJ;EACI;EACA;;;AAGJ;AAAA;EAEI;;;AAGJ;AAAA;EAEI;;;AAGJ;AAAA;AAAA;EAGI;EACA;;;AAGJ;EACI;;;AAGJ;AAAA;EAEI;EACA;EACA;EACA;;;AAGJ;EACI;;;AAEJ;EACI;;;AAGJ;EACI;;;AAGJ;AAAA;AAAA;AAAA;AAAA;EAKI;;;AAGJ;AAAA;EAEI;;;AAGJ;AAAA;EAEI;;;AAGJ;AAAA;AAAA;AAAA;EAII;EACA;;;AAGJ;EACI;;;AAGJ;EACI;EACA;EACA;EACA;EACA;EACA;;;AAGJ;EACI;;;AAGJ;EACI;;;AAGJ;AAAA;EAEI;;;AAGJ;EACI;EACA;;;AAGJ;AAAA;EAEI;;;AAGJ;EACI;EACA;;;AAGJ;AAAA;EAEI;;;AAGJ;EACI;;;AAGJ;EACI;;;AAIJ;EACI;;;AClMJ;EACC;EACA;EAEA;EACA;EACA;;AAGD;EACC;EACA;EAEA;EACA;EACA;;AAGD;EACC;EACA;EAEA;EACA;EACA;;AAGD;EACC;EACA;EAEA;EACA;EACA;;AAGD;EACC;EACA;EAEA;EACA;EACA;;AC1CD;EACI;EACA;;;ACqBJ;EACC,kBAvBa;EAwBb;EACA;EACA,aArBO;EAsBP;EACA;EACA;EACA,OA7Ba;;AA8Bb;EACC;;;AAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAaC,aA5CO;EA6CP;EACA;EACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EACC;;;AAIF;AAAA;EAEC;EACA;EACA;;ACifG;EDrfJ;AAAA;IAME;IACA;;;AC8eE;EDrfJ;AAAA;IAWE;IACA;;;;AAIF;AAAA;EAEC;EACA;;ACkeG;EDreJ;AAAA;IAME;IACA;;;;AAIF;AAAA;EAEC;EACA;;ACudG;ED1dJ;AAAA;IAME;IACA;;;;AAIF;AAAA;EAEC;EACA;;;AAGD;AAAA;EAEC;EACA;;;AAGD;AAAA;EAEC;EACA;EACA;;;AAGD;EACC;EACA;EACA;EACA;;;AAID;EACC;EACA;EACA;;ACibG;EDpbJ;IAME;IACA;;;AC6aE;EDpbJ;IAUE;IACA;;;;AAIF;EACC;EACA;;;AAGD;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAGD;EACC;EACA;;;AAGD;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACC;;AC2XE;ED/YJ;IAuBE;IACA;IACA;;;ACsXE;EDlXD;IACC;;;ACiXA;ED1WA;IACC;;;AAIH;EACC;;ACoWC;EDrWF;IAGE;;;AAIH;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AC8UE;ED9VH;IAkBE;IACA;IACA;;;AAED;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AAKH;EACC;IACC;;EAED;IACC;;;AEhQF;EACC;EACA;EACA;EACA;EACA;EACA;;AAEA;EACC;;AAGD;EACC;EACA,kBFbY;;AEgBb;EACC,kBFjBY;;AEoBb;EACC;EACA;EACA;EACA;EACA;;AAED;EACC;EACA;;AACA;EACC;;AAGF;EACC;EACA;;AAGD;EACC;EACA;EACA;EACA;;ADqgBE;ECzgBH;IAME;;;AAIF;EACC;EACA;EACA;EACA;EACA,OFpDqB;EEqDrB;EACA;;AACA;EACC;;AAED;EACC;;AAED;EACC,kBF7DW;EE8DX,OFjEW;;ACgjBV;EC3eH;IAEE;;;AAED;EACC;EACA;EACA;EACA;EACA;;AAEC;EACC;;AD+dD;ECheA;IAGE;;;AAGF;EACC;EACA;EACA;;AACA;EACC,OFxFQ;;AE+Fb;EACC;EACA;EACA;EACA;;AD0cE;EC9cH;IAME;;;AAED;EACC;EACA;EACA;EACA;;AACA;EACC,OF7GU;;AE+GX;EACC;EACA;EACA;EACA,kBFrHU;EEsHV;EACA;EACA;EACA;;AAKH;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ADmaE;ECjbH;IAgBE;;;AAED;EACC;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACC;;AAED;EACC;;AAED;EACC;;AAED;EACC;;AAGA;EACC;;AAED;EACC;;AAED;EACC;;;AAOL;EACC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AACA;EACC;;AAED;EACC;EACA;;AAIA;EACC;EACA;EACA;EACA;;AAEC;EACC;;AAMJ;EACC;EACA;EACA;EACA;EACA;EACA;EACA;;AD6UE;ECpVH;IASE;;;AAIF;EACC;EACA;EACA;EACA;EACA,OF5OqB;EE6OrB;EACA;;AACA;EACC;;AAED;EACC,kBFlPW;EEmPX,OFtPW;;AE0Pb;EACC;EACA;EACA;EACA;EACA;EACA;;ADgTE;ECtTH;IAQE;;;AAED;EACC;EACA;EACA;EACA;;AACA;EACC,OFvQU;;AEyQX;EACC;EACA;EACA;EACA,kBF/QU;EEgRV;EACA;EACA;EACA;;;ACrRJ;EACC;;AFgjBG;EEjjBJ;IAGE;;;AF8iBE;EEjjBJ;IAME;IACA;;;AF0iBE;EExiBH;IAEE;;;AAGF;EACC;EACA;EACA;EACA;EACA;;AF8hBE;EEniBH;IAOE;IACA;IACA;;;AAED;EACC;EACA;EACA;;AAGF;EACC;EACA;EACA;;AF+gBE;EElhBH;IAKE;IACA;;;AF4gBC;EElhBH;IASE;;;AAGF;EACC;EACA;EACA;EACA;EACA;;AFigBE;EEtgBH;IAOE;IACA;IACA;;;AF6fC;EEtgBH;IAYE;;;AAED;EACC;EACA;;;AC3DH;EACC;;AACA;EACC;EACA;EACA;EACA;;AH2iBE;EG/iBH;IAME;;;AHyiBC;EG/iBH;IASE;;;AHsiBC;EG/iBH;IAYE;;;AAGF;EACC;EACA,kBJdgB;EIehB;EACA;EACA;EACA;EACA;EACA;;AAEA;EACC;EACA;;AAED;EACC;;AAED;EACC;;AAED;EACC;;AH2gBC;EGxgBD;IACC,kBJtCU;;EIuCV;AAAA;IAEC;;EAED;IACC;;EAED;IACC;;;AAIH;AAAA;EAEC;EACA;;AAGD;EACC;EACA;EACA;EACA;;AACA;EACC;EACA;EACA;;AAKH;EACC;EACA;EACA;EACA;EACA;EACA;EACA,OJhFY;EIiFZ;EACA;EACA;;AH6dE;EGveH;IAYE;IACA;IACA,OJtFW;IIuFX;IACA;IACA","file":"../main.css","sourcesContent":["* {\n    box-sizing: border-box;\n\n    &:hover, &:focus {\n        outline: none;\n    }\n\n    &:before,\n    &:after {\n        box-sizing: border-box;\n    }\n}\n\nhtml {\n    min-height: 100%;\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    min-width: 320px;\n}\n\nh1, h2, h3, h4, h5, h6 {\n    margin: 0;\n}\np {\n    margin: 0;\n}\n\nul,\nol {\n    margin: 0;\n    padding: 0;\n}\n\nli {\n    list-style: none;\n}\n\nfigcaption,\nfigure,\nmain {\n    display: block;\n}\n\nfigure {\n    margin: 0;\n}\n\nhr {\n    box-sizing: content-box;\n    height: 0;\n    overflow: visible;\n}\n\npre {\n    font-family: monospace, monospace;\n    font-size: 1em;\n}\n\na {\n    -webkit-text-decoration-skip: objects;\n}\n\nabbr[title] {\n    text-decoration: underline;\n    text-decoration: underline dotted;\n}\n\nb,\nstrong {\n    font-weight: bold;\n}\n\ni,\nem {\n    font-style: italic;\n}\n\ncode,\nkbd,\nsamp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n}\n\nsmall {\n    font-size: 80%;\n}\n\nsub,\nsup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n}\n\nsub {\n    bottom: -0.25em;\n}\nsup {\n    top: -0.5em;\n}\n\nsvg:not(:root) {\n    overflow: hidden;\n}\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n    margin: 0;\n}\n\nbutton,\ninput {\n    overflow: visible;\n}\n\nbutton,\nselect {\n    text-transform: none;\n}\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n}\n\nfieldset {\n    padding: 0;\n}\n\nlegend {\n    box-sizing: border-box;\n    color: inherit;\n    display: table;\n    max-width: 100%;\n    padding: 0;\n    white-space: normal;\n}\n\nprogress {\n    vertical-align: baseline; /* 2 */\n}\n\ntextarea {\n    overflow: auto;\n}\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n}\n\n[type=\"search\"] {\n    -webkit-appearance: textfield;\n    outline-offset: -2px;\n}\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n}\n\n::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    font: inherit;\n}\n\ndetails,\nmenu {\n    display: block;\n}\n\nsummary {\n    display: list-item;\n}\n\ntemplate {\n    display: none;\n}\n\n\ntable {\n    border-collapse: collapse;\n}\n","@font-face {\n\tfont-family: \"TT Travels\";\n\tsrc: url(\"../fonts/TT/TTTravels-DemiBold.woff2\") format(\"woff2\"),\n\t\turl(\"../fonts/TT/TTTravels-DemiBold.woff\") format(\"woff\");\n\tfont-weight: 600;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: \"TT Travels\";\n\tsrc: url(\"../fonts/TT/TTTravels-Bold.woff2\") format(\"woff2\"),\n\t\turl(\"../fonts/TT/TTTravels-Bold.woff\") format(\"woff\");\n\tfont-weight: bold;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: \"TT Travels\";\n\tsrc: url(\"../fonts/TT/TTTravels-Regular.woff2\") format(\"woff2\"),\n\t\turl(\"../fonts/TT/TTTravels-Regular.woff\") format(\"woff\");\n\tfont-weight: normal;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: \"TT Travels\";\n\tsrc: url(\"../fonts/TT/TTTravels-Light.woff2\") format(\"woff2\"),\n\t\turl(\"../fonts/TT/TTTravels-Light.woff\") format(\"woff\");\n\tfont-weight: 300;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n\n@font-face {\n\tfont-family: \"TT Travels\";\n\tsrc: url(\"../fonts/TT/TTTravels-Medium.woff2\") format(\"woff2\"),\n\t\turl(\"../fonts/TT/TTTravels-Medium.woff\") format(\"woff\");\n\tfont-weight: 500;\n\tfont-style: normal;\n\tfont-display: swap;\n}\n","h1, h2, h3, h4, h5, h6, ul {\n    margin: 0;\n    padding: 0;\n}","// variables, colors\n$color-white: #ffffff;\n$color-black: #404040;\n$color-text-secondary: #636c81;\n$color-brand: #5a30f0;\n$color-lightgrey: #f3f6fb;\n$tt-ff: \"TT Travels\", \"Helvetica\", sans-serif;\n\n// Transition settings\n$transition-duration: 0.3s;\n\n// media settings\n$breakpoints: (\n\tmobile-landscape: 568px,\n\ttablet: 768px,\n\ttablet-landscape: 1024px,\n\tdesktop: 1200px,\n\tmedium-desktop: 1440px,\n\tlarge-desktop: 1800px,\n\tultra-desktop: 2400px,\n);\n$images-path: \"../img/\";\n\nbody {\n\tbackground-color: $color-white;\n\t-webkit-font-smoothing: antialiased;\n\t-moz-osx-font-smoothing: grayscale;\n\tfont-family: $tt-ff;\n\tfont-size: 18px;\n\tline-height: 26px;\n\tfont-weight: 400;\n\tcolor: $color-black;\n\t&.menu-open {\n\t\toverflow: hidden;\n\t}\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\n.h1,\n.h2,\n.h3,\n.h4,\n.h5,\n.h6 {\n\t// common styles\n\tfont-family: $tt-ff;\n\tfont-weight: 500;\n\tletter-spacing: -0.03em;\n\tmargin-bottom: 30px;\n\n\t&:last-child {\n\t\tmargin-bottom: 0;\n\t}\n}\n\nh1,\n.h1 {\n\tfont-size: 38px;\n\tline-height: 42px;\n\tfont-weight: 400;\n\t@include media(\">=tablet\") {\n\t\tfont-size: 56px;\n\t\tline-height: 64px;\n\t}\n\n\t@include media(\">=desktop\") {\n\t\tfont-size: 76px;\n\t\tline-height: 84px;\n\t}\n}\n\nh2,\n.h2 {\n\tfont-size: 32px;\n\tline-height: 34px;\n\n\t@include media(\">=tablet\") {\n\t\tfont-size: 48px;\n\t\tline-height: 49px;\n\t}\n}\n\nh3,\n.h3 {\n\tfont-size: 32px;\n\tline-height: 38px;\n\n\t@include media(\">=desktop\") {\n\t\tfont-size: 40px;\n\t\tline-height: 48px;\n\t}\n}\n\nh4,\n.h4 {\n\tfont-size: 24px;\n\tline-height: 38px;\n}\n\nh5,\n.h5 {\n\tfont-size: 20px;\n\tline-height: 27px;\n}\n\nh6,\n.h6 {\n\tfont-weight: 500;\n\tfont-size: 16px;\n\tline-height: 26px;\n}\n\na {\n\ttext-decoration: none;\n\tcolor: inherit;\n\toutline: none;\n\ttransition: color $transition-duration ease-in-out,\n\t\topacity $transition-duration ease-in-out;\n}\n\n.container {\n\tpadding-right: 20px;\n\tpadding-left: 20px;\n\twidth: auto;\n\n\t@include media(\">=desktop\") {\n\t\tmax-width: 1140px;\n\t\tmargin: 0 auto;\n\t}\n\t@include media(\">=medium-desktop\") {\n\t\tmax-width: 1370px;\n\t\tmargin: 0 auto;\n\t}\n}\n\nimg {\n\tdisplay: block;\n\tmax-width: 100%;\n}\n\n.wrapper {\n\tposition: relative;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-shrink: 0;\n\tflex-grow: 1;\n\tmin-height: 100vh;\n\theight: 100%;\n\toverflow: clip;\n}\n\nmain {\n\tflex-grow: 1;\n\tflex-shrink: 0;\n}\n\n.order-button {\n\twidth: 320px;\n\theight: 250px;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tletter-spacing: 0.03em;\n\ttext-transform: uppercase;\n\tcolor: #fff;\n\tfont-weight: 600;\n\tfont-size: 19px;\n\tline-height: 23px;\n\tposition: fixed;\n\tleft: 50%;\n\tbottom: 0;\n\tmargin: 0 0 0 -170px;\n\tz-index: 100;\n\tpointer-events: auto;\n\ttransition: opacity 0.4s ease-in-out;\n\t.menu-open & {\n\t\topacity: 0;\n\t}\n\t@include media(\"<tablet\") {\n\t\tmargin: 0 0 0 -120px;\n\t\twidth: 260px;\n\t\theight: 260px;\n\t}\n\t@include media(\">=desktop\") {\n\t\t&:hover {\n\t\t\t.circle::before {\n\t\t\t\ttransform: translateX(-50%) translateY(-50%) scale(0.7);\n\t\t\t}\n\t\t}\n\t}\n\t.scrolled & {\n\t\t@include media(\">=desktop\") {\n\t\t\t&:hover {\n\t\t\t\t.circle {\n\t\t\t\t\ttop: -70px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.circle {\n\t\t\ttop: 30%;\n\t\t\t@include media(\"<tablet\") {\n\t\t\t\ttop: 50%;\n\t\t\t}\n\t\t}\n\t}\n\t.circle {\n\t\tposition: absolute;\n\t\ttop: 0%;\n\t\tleft: 10%;\n\t\twidth: 265px;\n\t\theight: 265px;\n\t\ttransform: scale(0.75);\n\t\tborder-radius: 50%;\n\t\tbackground: #5a30f0;\n\t\tborder: 1px solid rgba(255, 255, 255, 0.1);\n\t\tz-index: 4;\n\t\tpointer-events: none;\n\t\ttransition: background 0.4s ease, top 0.8s ease;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttext-align: center;\n\t\t@include media(\"<tablet\") {\n\t\t\twidth: 200px;\n\t\t\theight: 200px;\n\t\t\ttop: 25%;\n\t\t}\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\ttransform: translateX(-50%) translateY(-50%) scale(0.5);\n\t\t\twidth: 200%;\n\t\t\theight: 200%;\n\t\t\tborder: 2px solid #fff;\n\t\t\tborder-radius: 50%;\n\t\t\tz-index: 2;\n\t\t\tpointer-events: none;\n\t\t\topacity: 0.3;\n\t\t\ttransition: transform 0.4s ease;\n\t\t}\n\t}\n}\n\n@keyframes rotate {\n\t0% {\n\t\ttransform: rotate(0deg);\n\t}\n\t0% {\n\t\ttransform: rotate(360deg);\n\t}\n}\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  //'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".header {\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\tz-index: 20;\n\ttransition: opacity 0.5s linear, background-color 0.2s linear,\n\t\ttransform 0.5s ease-in-out, box-shadow 0.2s ease-in-out;\n\t&.down {\n\t\ttransform: translateY(-100%);\n\t}\n\n\t&.sticky {\n\t\tbox-shadow: 0px 2px 14px rgba(0, 0, 0, 0.07);\n\t\tbackground-color: $color-white;\n\t}\n\n\t.menu-open & {\n\t\tbackground-color: $color-white;\n\t}\n\n\t&__row {\n\t\tpadding-top: 17px;\n\t\tpadding-bottom: 17px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t}\n\t&__logo {\n\t\twidth: 120px;\n\t\tmargin-right: 25px;\n\t\timg {\n\t\t\twidth: 100%;\n\t\t}\n\t}\n\t&__holder {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n\n\t&__switch {\n\t\tbackground: #ffffff;\n\t\tborder: 1px solid #e2e8f0;\n\t\tborder-radius: 48px;\n\t\tpadding: 3px;\n\t\t@include media(\"<tablet\") {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t&__switch-btn {\n\t\tpadding: 8px 12px;\n\t\tfont-weight: 600;\n\t\tfont-size: 14px;\n\t\tline-height: 15px;\n\t\tcolor: $color-text-secondary;\n\t\tborder-radius: 34px;\n\t\ttransition: all 0.3s ease-in-out;\n\t\t&:not(.active):hover {\n\t\t\topacity: 0.7;\n\t\t}\n\t\t&:not(:last-child) {\n\t\t\tmargin-right: 5px;\n\t\t}\n\t\t&.active {\n\t\t\tbackground-color: $color-brand;\n\t\t\tcolor: $color-white;\n\t\t}\n\t}\n\n\t&__nav {\n\t\t@include media(\"<desktop\") {\n\t\t\tdisplay: none;\n\t\t}\n\t\tul {\n\t\t\tlist-style: none;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tli {\n\t\t\t\t&:not(:last-child) {\n\t\t\t\t\tmargin-right: 20px;\n\t\t\t\t\t@include media(\">=medium-desktop\") {\n\t\t\t\t\t\tmargin-right: 32px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta {\n\t\t\t\t\tletter-spacing: 0.2px;\n\t\t\t\t\tfont-weight: 500;\n\t\t\t\t\ttransition: color 0.3s ease-in-out;\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\tcolor: $color-brand;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t&__tel {\n\t\tfont-weight: 600;\n\t\tletter-spacing: 0.2px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\t@include media(\"<tablet\") {\n\t\t\tdisplay: none;\n\t\t}\n\t\ta {\n\t\t\tmargin-right: 15px;\n\t\t\tpadding-right: 15px;\n\t\t\tposition: relative;\n\t\t\ttransition: color 0.3s ease-in-out;\n\t\t\t&:hover {\n\t\t\t\tcolor: $color-brand;\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\twidth: 2px;\n\t\t\t\theight: 18px;\n\t\t\t\tbackground-color: $color-black;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\tright: 0;\n\t\t\t\ttransform: translateY(-50%);\n\t\t\t}\n\t\t}\n\t}\n\n\t&__menu {\n\t\tvertical-align: middle;\n\t\t-webkit-appearance: none;\n\t\t-moz-appearance: none;\n\t\tappearance: none;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 52px;\n\t\theight: 52px;\n\t\tcursor: pointer;\n\t\tborder: none;\n\t\tpadding: 0;\n\t\tbackground-color: transparent;\n\t\t@include media(\">=desktop\") {\n\t\t\tdisplay: none;\n\t\t}\n\t\tspan {\n\t\t\tbackground-color: #141414;\n\t\t\tdisplay: block;\n\t\t\tz-index: 1;\n\t\t\twidth: 28px;\n\t\t\theight: 2px;\n\t\t\tborder-radius: 2px;\n\t\t\ttransition: 0.3s cubic-bezier(0.65, 0.05, 0.36, 1);\n\t\t\t&:not(:last-child) {\n\t\t\t\tmargin-bottom: 8px;\n\t\t\t}\n\t\t\t&:nth-child(1) {\n\t\t\t\ttransform-origin: left;\n\t\t\t}\n\t\t\t&:nth-child(2) {\n\t\t\t\ttransform-origin: center;\n\t\t\t}\n\t\t\t&:nth-child(3) {\n\t\t\t\ttransform-origin: left;\n\t\t\t}\n\t\t\t.menu-open & {\n\t\t\t\t&:nth-child(1) {\n\t\t\t\t\ttransform: rotate(45deg) translate(3px, -1px);\n\t\t\t\t}\n\t\t\t\t&:nth-child(2) {\n\t\t\t\t\ttransform: scaleX(0);\n\t\t\t\t}\n\t\t\t\t&:nth-child(3) {\n\t\t\t\t\ttransform: rotate(-45deg) translate(1px, 3px);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n.menu {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tposition: fixed;\n\tz-index: 500;\n\ttop: 84px;\n\tleft: 0;\n\twidth: 100vw;\n\theight: calc(100vh - 84px);\n\tcolor: #141414;\n\tbackground-color: #fff;\n\tpointer-events: none;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tpadding: 20px 20px 0;\n\ttransform: translateX(100%);\n\ttransition: transform 0.4s ease-in-out;\n\t& > * {\n\t\twidth: 100%;\n\t}\n\t.menu-open & {\n\t\tpointer-events: all;\n\t\ttransform: translateX(0);\n\t}\n\n\t&__nav {\n\t\tul {\n\t\t\tlist-style: none;\n\t\t\tmargin: 0;\n\t\t\tpadding: 0;\n\t\t\ttext-align: center;\n\t\t\tli {\n\t\t\t\t&:not(:last-child) {\n\t\t\t\t\tmargin-bottom: 15px;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t&__switch {\n\t\tbackground: #ffffff;\n\t\tborder: 1px solid #e2e8f0;\n\t\tborder-radius: 48px;\n\t\tpadding: 3px;\n\t\tdisplay: inline-flex;\n\t\twidth: fit-content;\n\t\tmargin-bottom: 30px;\n\t\t@include media(\">=tablet\") {\n\t\t\tdisplay: none;\n\t\t}\n\t}\n\n\t&__switch-btn {\n\t\tpadding: 8px 12px;\n\t\tfont-weight: 600;\n\t\tfont-size: 14px;\n\t\tline-height: 15px;\n\t\tcolor: $color-text-secondary;\n\t\tborder-radius: 34px;\n\t\ttransition: all 0.3s ease-in-out;\n\t\t&:not(:last-child) {\n\t\t\tmargin-right: 5px;\n\t\t}\n\t\t&.active {\n\t\t\tbackground-color: $color-brand;\n\t\t\tcolor: $color-white;\n\t\t}\n\t}\n\n\t&__tel {\n\t\tfont-weight: 600;\n\t\tletter-spacing: 0.2px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tmargin-top: 50px;\n\t\t@include media(\">=tablet\") {\n\t\t\tdisplay: none;\n\t\t}\n\t\ta {\n\t\t\tmargin-right: 15px;\n\t\t\tpadding-right: 15px;\n\t\t\tposition: relative;\n\t\t\ttransition: color 0.3s ease-in-out;\n\t\t\t&:hover {\n\t\t\t\tcolor: $color-brand;\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tcontent: \"\";\n\t\t\t\twidth: 2px;\n\t\t\t\theight: 18px;\n\t\t\t\tbackground-color: $color-black;\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 50%;\n\t\t\t\tright: 0;\n\t\t\t\ttransform: translateY(-50%);\n\t\t\t}\n\t\t}\n\t}\n}\n",".hero-section {\n\tposition: relative;\n\t@include media(\"<tablet-landscape\") {\n\t\tpadding-top: 150px;\n\t}\n\t@include media(\">=tablet-landscape\") {\n\t\theight: 100vh;\n\t\tmin-height: 700px;\n\t}\n\t.container {\n\t\t@include media(\">=tablet-landscape\") {\n\t\t\theight: 100%;\n\t\t}\n\t}\n\t&__img {\n\t\twidth: 50vw;\n\t\theight: 100%;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\t@include media(\"<tablet-landscape\") {\n\t\t\tposition: relative;\n\t\t\twidth: calc(100% + 40px);\n\t\t\theight: 500px;\n\t\t}\n\t\timg {\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\tobject-fit: cover;\n\t\t}\n\t}\n\t&__row {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: flex-end;\n\t\t@include media(\"<tablet-landscape\") {\n\t\t\tflex-direction: column-reverse;\n\t\t\theight: auto;\n\t\t}\n\t\t@include media(\">=tablet-landscape\") {\n\t\t\theight: 100%;\n\t\t}\n\t}\n\t&__content {\n\t\twidth: 50%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\t@include media(\"<tablet-landscape\") {\n\t\t\twidth: 100%;\n\t\t\talign-items: flex-start;\n\t\t\tmargin-bottom: 25px;\n\t\t}\n\t\t@include media(\">=tablet-landscape\") {\n\t\t\theight: 100%;\n\t\t}\n\t\t.holder {\n\t\t\tmax-width: 400px;\n\t\t\tmargin-top: -10px;\n\t\t}\n\t}\n}\n",".advantages {\n\tpadding: 70px 0;\n\t&__list {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 1fr 1fr 1fr;\n\t\tgap: 20px;\n\t\twidth: 100%;\n\t\t@include media(\">=medium-desktop\") {\n\t\t\tgap: 40px;\n\t\t}\n\t\t@include media(\"<desktop\") {\n\t\t\tgrid-template-columns: 1fr 1fr;\n\t\t}\n\t\t@include media(\"<tablet\") {\n\t\t\tgrid-template-columns: 1fr;\n\t\t}\n\t}\n\t&__card {\n\t\tpadding: 20px 40px;\n\t\tbackground-color: $color-lightgrey;\n\t\ttext-align: center;\n\t\tborder-radius: 8px;\n\t\tposition: relative;\n\t\ttransform: translateY(120px);\n\t\ttransition: background 0.4s ease, opacity 0.5s ease, transform 1.5s ease;\n\t\topacity: 0;\n\n\t\t.animated & {\n\t\t\ttransform: translateY(0);\n\t\t\topacity: 1;\n\t\t}\n\t\t&:nth-child(2) {\n\t\t\ttransition-delay: 0s, 0s, 0.2s;\n\t\t}\n\t\t&:nth-child(3) {\n\t\t\ttransition-delay: 0s, 0s, 0.4s;\n\t\t}\n\t\t&:nth-child(4) {\n\t\t\ttransition-delay: 0s, 0s, 0.6s;\n\t\t}\n\t\t@include media(\">=desktop\") {\n\t\t\t&:hover {\n\t\t\t\tbackground-color: $color-brand;\n\t\t\t\t.h4,\n\t\t\t\th4 {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\t\t\t\t.img-holder {\n\t\t\t\t\topacity: 0;\n\t\t\t\t}\n\t\t\t\t.advantages__card-text {\n\t\t\t\t\topacity: 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t.h4,\n\t\th4 {\n\t\t\tmargin-bottom: 25px;\n\t\t\ttransition: opacity 0.4s ease;\n\t\t}\n\n\t\t.img-holder {\n\t\t\twidth: 190px;\n\t\t\theight: 190px;\n\t\t\tmargin: 0 auto;\n\t\t\ttransition: opacity 0.5s ease;\n\t\t\timg {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tobject-fit: cover;\n\t\t\t}\n\t\t}\n\t}\n\n\t&__card-text {\n\t\tfont-size: 16px;\n\t\tline-height: 22px;\n\t\tpadding: 30px;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tcolor: $color-white;\n\t\ttext-align: left;\n\t\topacity: 0;\n\t\ttransition: opacity 0.3s ease;\n\t\t@include media(\"<desktop\") {\n\t\t\topacity: 1;\n\t\t\tpadding: 0;\n\t\t\tcolor: $color-black;\n\t\t\tposition: static;\n\t\t\tmargin-bottom: 15px;\n\t\t\ttext-align: center;\n\t\t}\n\t}\n}\n"]}